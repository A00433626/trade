[{"/Users/mcda/Desktop/Perennia Work/trade/src/index.js":"1","/Users/mcda/Desktop/Perennia Work/trade/src/reportWebVitals.js":"2","/Users/mcda/Desktop/Perennia Work/trade/src/App.js":"3","/Users/mcda/Desktop/Perennia Work/trade/src/loginForm.jsx":"4","/Users/mcda/Desktop/Perennia Work/trade/src/components/Dashboard.jsx":"5","/Users/mcda/Desktop/Perennia Work/trade/src/components/UnsafeScriptsWarning.jsx":"6","/Users/mcda/Desktop/Perennia Work/trade/src/components/MainDashboard.jsx":"7","/Users/mcda/Desktop/Perennia Work/trade/src/components/StocksList.jsx":"8","/Users/mcda/Desktop/Perennia Work/trade/src/components/StocksLoaderStatus.jsx":"9","/Users/mcda/Desktop/Perennia Work/trade/src/components/StocksGraph.jsx":"10","/Users/mcda/Desktop/Perennia Work/trade/src/components/MarketTrendArrow.jsx":"11","/Users/mcda/Desktop/Perennia Work/trade/src/components/StockRow.jsx":"12","/Users/mcda/Desktop/Perennia Work/trade/src/chartConfig.js":"13","/Users/mcda/Desktop/Perennia Work/trade/src/components/LandingPage.jsx":"14","/Users/mcda/Desktop/Perennia Work/trade/src/components/AccountSummary.jsx":"15","/Users/mcda/Desktop/Perennia Work/trade/src/API.js":"16","/Users/mcda/Desktop/Perennia Work/trade/src/components/common/InfoBox.jsx":"17","/Users/mcda/Desktop/Perennia Work/trade/src/utils/RefreshTokenSetup.jsx":"18","/Users/mcda/Desktop/Perennia Work/trade/src/ProtectedRoute.jsx":"19","/Users/mcda/Desktop/Perennia Work/trade/src/components/clientStocks/ClientStock.jsx":"20"},{"size":545,"mtime":1606944805518,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1606917366012,"results":"23","hashOfConfig":"22"},{"size":4369,"mtime":1607017190202,"results":"24","hashOfConfig":"22"},{"size":2621,"mtime":1606946073052,"results":"25","hashOfConfig":"22"},{"size":1219,"mtime":1607017229973,"results":"26","hashOfConfig":"22"},{"size":711,"mtime":1606923010428,"results":"27","hashOfConfig":"22"},{"size":4548,"mtime":1607017249512,"results":"28","hashOfConfig":"22"},{"size":1945,"mtime":1606946702579,"results":"29","hashOfConfig":"22"},{"size":494,"mtime":1606937028848,"results":"30","hashOfConfig":"22"},{"size":2827,"mtime":1606967578059,"results":"31","hashOfConfig":"22"},{"size":532,"mtime":1606922798253,"results":"32","hashOfConfig":"22"},{"size":1220,"mtime":1606959165714,"results":"33","hashOfConfig":"22"},{"size":2011,"mtime":1606922282686,"results":"34","hashOfConfig":"22"},{"size":1176,"mtime":1606941675253,"results":"35","hashOfConfig":"22"},{"size":5014,"mtime":1606935737469,"results":"36","hashOfConfig":"22"},{"size":100,"mtime":1606925296375,"results":"37","hashOfConfig":"22"},{"size":647,"mtime":1606934828563,"results":"38","hashOfConfig":"22"},{"size":508,"mtime":1606943110329,"results":"39","hashOfConfig":"22"},{"size":590,"mtime":1606944997659,"results":"40","hashOfConfig":"22"},{"size":7484,"mtime":1607019186068,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ehl26c",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mcda/Desktop/Perennia Work/trade/src/index.js",[],["87","88"],"/Users/mcda/Desktop/Perennia Work/trade/src/reportWebVitals.js",[],"/Users/mcda/Desktop/Perennia Work/trade/src/App.js",["89","90","91"],"/Users/mcda/Desktop/Perennia Work/trade/src/loginForm.jsx",["92","93"],"import React, { Component } from 'react'\nimport './loginForm.css'\nimport {Card,Row,Col,Container, Button} from 'react-bootstrap';\nimport GoogleLogin from 'react-google-login';\nimport {RefreshTokenSetup} from '/Users/mcda/Desktop/Perennia Work/trade/src/utils/RefreshTokenSetup.jsx'\n \nclass LoginForm extends Component{\n    State = {\n        isAuthenticated:false,\n        errorMessage:null,\n        userObject:null,\n    }\n      // responseGoogle=(response)=>{\n      //   if(response.error)\n      //   {\n      //     this.setState({isAuthenticated:false})\n      //   }\n      //   else if(response.profileObj)\n      //   {\n      //     this.setState({isAuthenticated:true,userObject:response.profileObj})\n      //     this.props.history.push(\"./dashboard\")\n      //   }\n      // }\n    // validateForm=()=>{\n      \n       \n    // } \n    // handleLogin=()=>{\n    //     console.log('clicked');\n    //     <GoogleLogin\n    //     clientId=\"705392616254-tpjvpal0kv0dvq3vem4ajbherauooj6c.apps.googleusercontent.com\"\n    //     buttonText=\"Login\"\n    //     onSuccess={this.responseGoogle}\n    //     onFailure={this.responseGoogle}\n    //     cookiePolicy={'single_host_origin'}\n    //   />\n    // }\n    render() { \n        console.log(this.props);\n        \n        return ( \n            <Container className='login-container'>\n                <Row>\n                    <Col xs={12}>\n                    <Card.Body className='login-body'>\n                    <div className=\"homepage_nav-body\">\n                    <div className=\"homepage_image-container\">\n                    <img alt=\"Google\" height=\"92\" src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"/>\n                    </div>\n                    <div className=\"homepage_nav-search-input\">\n                    <GoogleLogin\n                        clientId=\"705392616254-tpjvpal0kv0dvq3vem4ajbherauooj6c.apps.googleusercontent.com\"\n                        buttonText=\"Login with Google\"\n                        onSuccess={(e)=>this.props.onChange(e,this.props)}\n                        onFailure={()=>this.props.onChange(this.props)}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                    {/* <Button block size=\"lg\" type=\"submit\" onClick={()=>this.props.onSubmit()}>\n                          Login\n                    </Button> */}\n                        </div> \n                    </div>\n                    </Card.Body>\n                    </Col>\n                </Row>\n                \n               \n            </Container>\n         );\n    }\n}\n \nexport default LoginForm;","/Users/mcda/Desktop/Perennia Work/trade/src/components/Dashboard.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/UnsafeScriptsWarning.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/MainDashboard.jsx",["94","95","96","97","98","99","100","101","102","103"],"/Users/mcda/Desktop/Perennia Work/trade/src/components/StocksList.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/StocksLoaderStatus.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/StocksGraph.jsx",["104","105"],"import React from 'react'\nimport {Line} from 'react-chartjs-2';\nimport * as zoom from 'chartjs-plugin-zoom'\nimport { chartJsConfig, chartColors, chartDataset } from '../chartConfig.js'\n\nclass StocksGraph extends React.Component {\n\n  updateChart = () => {\n    let chart = this.refs.chart.chartInstance;\n// If stock object os null update chart data set as empty\n    if(Object.keys(this.props.stocks).length === 0)\n    {\n      chart.data.datasets = [];\n      return chart.update();\n    }\n    //Passing tock Info \n    Object.keys(this.props.stocks).map((stock_name, index) =>\n    {\n      let current_stock = this.props.stocks[stock_name];\n      let chart_dataset = chart.data.datasets.find((dataset) => {\n        return dataset.label === stock_name.toUpperCase()\n      });\n\n      if(current_stock.is_selected)\n      {\n        let current_stock = this.props.stocks[stock_name];\n        if(chart_dataset)\n        {\n          // only update the data, don't create a new dataset for the graph\n          chart_dataset.data = this.getStockValues(current_stock);\n        }\n        else\n        {\n          // create a new dataset for graph\n          if(current_stock)\n          {\n            chart.data.datasets = chart.data.datasets.concat(\n              [\n                chartDataset(stock_name, chartColors[index], this.getStockValues(current_stock))\n              ]\n            )\n          }\n        }\n      }\n      else\n      {\n        if(chart_dataset)\n        {\n          // remove the dataset from graph\n          chart.data.datasets.splice(chart.data.datasets.indexOf(chart_dataset), 1);\n        }\n      }\n      chart.update();\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.updateChart();\n  }\n\n  // returns an array of objects, {t: timestamp, y: value}\n  getStockValues = (stock) =>{\n    return stock.history.map((history) => {\n      return {t: new Date(history.time), y: history.value};\n    })\n  }\n\n  resetZoom = () => {\n    this.refs.chart.chartInstance.resetZoom();\n  }\n\n  render() {\n    return (\n      <div className={'card column'} style={{margin:'10px'}} >\n        <div className='card-header'>\n          <div className='card-header-title'>\n            Graph\n          </div>\n        </div>\n        <div className='card-content'>\n          <p className='is-size-7 has-text-info'>\n            {\n              this.refs.chart &&\n              this.refs.chart.chartInstance.data.datasets.length > 0 ? 'Scroll/pinch to zoom, drag to pan.' : 'Click on any stocks on your left to see graphs.'\n            }\n          </p>\n          <button className=\"button is-small is-pulled-right\" onClick={this.resetZoom}>Reset zoom</button>\n          <Line\n            data={{datasets: []}}\n            options={chartJsConfig}\n            ref='chart'\n          />\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default StocksGraph;","/Users/mcda/Desktop/Perennia Work/trade/src/components/MarketTrendArrow.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/StockRow.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/chartConfig.js",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/LandingPage.jsx",["106"],"import React, { Component } from 'react'\nimport { Dropdown } from 'react-bootstrap';\nimport './LandingPage.css';\nimport {Avatar} from '@material-ui/core';\n\nclass LandingPage extends Component{\n    state = {   }\n    dropDownClicked=()=>{\n        console.log('clicked');\n        \n    }\n    render() { \n       return (\n     <div className=\"main-conatianer-header\">\n         {/* Account Logo */}\n         <div className=\"main-conatianer-header-logo\">\n             Company Name\n         </div>\n         {/* icons */}\n         <div className=\"menu-icons\">\n         <div className=\"menu-icons-anchor\">\n           <a href='#'>notification</a>\n         </div>\n         <div className=\"menu-icons-dropdown\">\n            <Dropdown>\n              <Dropdown.Toggle variant='none' className=\"dropdown-basic\">\n                  <Avatar/>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item href=\"/accountsummary\">Account </Dropdown.Item>\n                <Dropdown.Item href=\"/login\">Logout</Dropdown.Item>\n              </Dropdown.Menu>\n          </Dropdown>\n          </div>\n         </div>\n     </div>\n       );\n    }\n}\nexport default LandingPage;","/Users/mcda/Desktop/Perennia Work/trade/src/components/AccountSummary.jsx",["107","108","109","110"],"import { Button, Card, Col, Container, Row } from 'react-bootstrap';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport './AccountSummary.css';\nimport axios from 'axios';\nimport {Link} from'react-router-dom';\nimport GoogleLogout from 'react-google-login';\nimport { getUserData } from '../API';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport InfoBox from './common/InfoBox';\n\n class AccountSummary extends Component{\n\n    state = { \n        accountData:null,\n        personalInfo:null,\n        address:null,\n      }\n\n    getDataFromAPI = async () => {\n       return (\n            await axios\n\t\t\t.get(getUserData)\n\t\t\t.then((res) => {\n\t\t\t\tif (res.status === 200) {\n                    return (res.data.results[0])\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err))\n       \n        ) };\n\t\t\n    getUserInfo= (accountData)=>{\n        const {location,picture,name,phone,email,gender,dob:{age}}=accountData;\n        let address={};\n        let personalInfo={};\n        address['location']=location;\n        personalInfo['image']=picture;\n        personalInfo['name']=name;\n        personalInfo['phone']=phone;\n        personalInfo['age']=age;\n        this.setState({personalInfo,address});\n        return null;\n        \n    }\n\tcomponentDidMount = async () => {\n       let data= await this.getDataFromAPI();\n       this.getUserInfo(data);\n       this.setState({accountData:data})\n\t};\n    render() { \n     const {accountData,personalInfo,address}=this.state;\n        if(!accountData|| !personalInfo|| !address) return <h1>Loading...</h1>;\n        return ( \n            <Container className='account-summary-container'>\n             \n           <div className=\"account-summary-main-container\">\n           <Link to='/dashboard'><i className=\"fa fa-caret-left fa-lg\"></i> Back</Link>\n           <div className=\"account-summary-image\">\n           {personalInfo ?(<img src={`${personalInfo ? personalInfo.image.large :''}`} alt=\"image\"/>) :(<Skeleton variant=\"circle\" width={200} height={200} />)}\n           </div>\n           <Card.Body className=\"account-summary-card-body\">\n               <Row className=\"account-summary-personal-information-conatainer\">\n             <Col lg={4} xs={12} className=\"account-summary-name-information-row\">\n             {personalInfo?(<InfoBox labelText='NAME' labelClass='account-summary-name-label' contentData={`${personalInfo?.name.title}. ${personalInfo?.name.first}  ${personalInfo?.name.last}`} contentClass='account-summary-name'/> ):(<Skeleton variant=\"rect\"  />)} \n             </Col>\n             <Col lg={4} xs={12} className=\"account-summary-age-information-row\">\n             {personalInfo?(<InfoBox labelText='AGE' labelClass='account-summary-age-label' contentData={`${personalInfo?.age}`} contentClass='account-summary-age'/>):(<Skeleton variant=\"rect\"  />)} \n             </Col>\n             <Col lg={4} xs={12} className=\"account-summary-phone-information-row\">\n              {personalInfo?(\n              ( <InfoBox labelText='PHONE' labelClass='account-summary-phone-label' contentData={`${personalInfo?.phone}`} contentClass='account-summary-phone'/>)\n             ):(<Skeleton variant=\"rect\"  />)} \n             \n             </Col>\n           </Row>\n           <Row className=\"account-summary-address-information-conatainer\">\n             <Col lg={4} xs={12} className=\"account-summary-street-information-row\">\n             {address?(\n              <InfoBox labelText='STREET' labelClass='account-summary-street-label' contentData={`${address?.location.street.number}   ${address?.location.street.name}`} contentClass='account-summary-street'/>\n             ):(<Skeleton variant=\"rect\"  />)}\n             </Col>\n             <Col lg={4} xs={12} className=\"account-summary-country-information-row\">\n             {address?(\n               <InfoBox labelText='CITY' labelClass='account-summary-city-label' contentData={`${address?.location.city}`} contentClass='account-summary-city'/>\n             ):(<Skeleton variant=\"rect\"  />)}\n             </Col>\n             <Col lg={4} xs={12} className=\"account-summary-state-information-row\"> {address?(\n               <InfoBox labelText='Country' labelClass='account-summary-country-label' contentData={`${address?.location.country}`} contentClass='account-summary-country'/>\n             ):(<Skeleton variant=\"rect\"  />)} </Col>\n             <Col lg={4} xs={12} className=\"account-summary-country-information-row\">\n             {address?(\n               <InfoBox labelText='POSTAL' labelClass='account-summary-postal-label' contentData={`${address?.location.postcode}`} contentClass='account-summary-postal'/>\n             ):(<Skeleton variant=\"rect\"  />)}\n             </Col>\n           </Row>\n           <Row className=\"account-summary-signout\">\n               <Button variant='danger' onClick={()=>{this.props.history.push('/')}}>SignOut</Button>\n           </Row>\n           </Card.Body>\n           </div>\n          \n            </Container>\n        );\n    }\n}\n \nexport default AccountSummary;","/Users/mcda/Desktop/Perennia Work/trade/src/API.js",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/common/InfoBox.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/utils/RefreshTokenSetup.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/ProtectedRoute.jsx",[],"/Users/mcda/Desktop/Perennia Work/trade/src/components/clientStocks/ClientStock.jsx",["111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":19},{"ruleId":"119","severity":1,"message":"123","line":9,"column":9,"nodeType":"121","messageId":"122","endLine":9,"endColumn":26},{"ruleId":"119","severity":1,"message":"124","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":22},{"ruleId":"119","severity":1,"message":"125","line":3,"column":33,"nodeType":"121","messageId":"122","endLine":3,"endColumn":39},{"ruleId":"119","severity":1,"message":"123","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":26},{"ruleId":"119","severity":1,"message":"126","line":2,"column":13,"nodeType":"121","messageId":"122","endLine":2,"endColumn":18},{"ruleId":"119","severity":1,"message":"127","line":8,"column":9,"nodeType":"121","messageId":"122","endLine":8,"endColumn":13},{"ruleId":"119","severity":1,"message":"128","line":8,"column":14,"nodeType":"121","messageId":"122","endLine":8,"endColumn":19},{"ruleId":"119","severity":1,"message":"125","line":8,"column":20,"nodeType":"121","messageId":"122","endLine":8,"endColumn":26},{"ruleId":"119","severity":1,"message":"129","line":8,"column":27,"nodeType":"121","messageId":"122","endLine":8,"endColumn":32},{"ruleId":"119","severity":1,"message":"130","line":8,"column":33,"nodeType":"121","messageId":"122","endLine":8,"endColumn":36},{"ruleId":"119","severity":1,"message":"131","line":8,"column":37,"nodeType":"121","messageId":"122","endLine":8,"endColumn":40},{"ruleId":"119","severity":1,"message":"132","line":8,"column":41,"nodeType":"121","messageId":"122","endLine":8,"endColumn":45},{"ruleId":"133","severity":1,"message":"134","line":40,"column":30,"nodeType":"135","messageId":"136","endLine":40,"endColumn":32},{"ruleId":"133","severity":1,"message":"134","line":75,"column":66,"nodeType":"135","messageId":"136","endLine":75,"endColumn":68},{"ruleId":"119","severity":1,"message":"137","line":3,"column":13,"nodeType":"121","messageId":"122","endLine":3,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":17,"column":60,"nodeType":"135","messageId":"136","endLine":17,"endColumn":62},{"ruleId":"138","severity":1,"message":"139","line":22,"column":12,"nodeType":"140","endLine":22,"endColumn":24},{"ruleId":"119","severity":1,"message":"141","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"142","line":34,"column":44,"nodeType":"121","messageId":"122","endLine":34,"endColumn":49},{"ruleId":"119","severity":1,"message":"143","line":34,"column":50,"nodeType":"121","messageId":"122","endLine":34,"endColumn":56},{"ruleId":"144","severity":1,"message":"145","line":60,"column":28,"nodeType":"140","endLine":60,"endColumn":101},{"ruleId":"119","severity":1,"message":"146","line":34,"column":51,"nodeType":"121","messageId":"122","endLine":34,"endColumn":60},{"ruleId":"119","severity":1,"message":"147","line":44,"column":10,"nodeType":"121","messageId":"122","endLine":44,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":52,"column":49,"nodeType":"135","messageId":"136","endLine":52,"endColumn":51},{"ruleId":"119","severity":1,"message":"148","line":119,"column":21,"nodeType":"121","messageId":"122","endLine":119,"endColumn":25},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'RefreshTokenSetup' is defined but never used.","'ProtectedRoute' is defined but never used.","'Button' is defined but never used.","'bulma' is defined but never used.","'Card' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'zoom' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'GoogleLogout' is defined but never used.","'email' is assigned a value but never used.","'gender' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'localUser' is assigned a value but never used.","'total' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]